-- UI Library
local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/7yhx/kwargs_Ui_Library/main/source.lua"))()

local UI = Lib:Create{
   Theme = "Dark",
   Size = UDim2.new(0, 555, 0, 400)
}

local Main = UI:Tab{
   Name = "Car Control"
}

local Divider = Main:Divider{
   Name = "Speed Settings"
}

-- VARIÁVEIS DE CONFIGURAÇÃO
local MPH_TO_STUD = 1.5 / 0.745
local MAX_MPH = 550 -- valor inicial
local MAX_SPEED = MAX_MPH * MPH_TO_STUD

-- Função para alterar velocidade
local function SetSpeedMPH(mph)
    MAX_MPH = mph
    MAX_SPEED = MAX_MPH * MPH_TO_STUD
    print("Velocidade máxima definida para:", mph, "MPH")
end

-- Criar botões de velocidade (100–700 MPH)
local speedButtons = {}
for mph = 100, 700, 100 do
    local btn = Divider:Button{
        Name = mph .. " MPH",
        Callback = function()
            SetSpeedMPH(mph)
        end
    }
    table.insert(speedButtons, btn)
end

-- Botão para deletar os botões
Divider:Button{
    Name = "Delete Buttons",
    Callback = function()
        for _, btn in ipairs(speedButtons) do
            btn:Destroy()
        end
        speedButtons = {}
    end
}

----------------------------------------------------------------------------------
-- SISTEMA DE CARRO INTEGRADO COM A VELOCIDADE DA UI

local Players    = game:GetService("Players")
local RunService = game:GetService("RunService")
local UIS        = game:GetService("UserInputService")

-- Forças fixas
local ASSIST_FORCE = 30000
local BRAKE_FORCE  = 40000
local CLAMP_P      = 5000

local player    = Players.LocalPlayer
local seat
local isAccel   = false
local isBraking = false

-- Objetos físicos
local assist = Instance.new("BodyForce")
assist.Name  = "SpeedAssist"

local limiter = Instance.new("BodyVelocity")
limiter.Name     = "SpeedLimiter"
limiter.MaxForce = Vector3.new(math.huge, 0, math.huge)
limiter.P        = CLAMP_P

local brake = Instance.new("BodyForce")
brake.Name = "SpeedBrake"

-- Detecção de assento
player.CharacterAdded:Connect(function(char)
	local humanoid = char:WaitForChild("Humanoid")
	humanoid.Seated:Connect(function(active, s)
		if active and s:IsA("VehicleSeat") then
			seat = s
		else
			seat = nil
			assist.Parent  = nil
			limiter.Parent = nil
			brake.Parent   = nil
		end
	end)
end)

if player.Character and player.Character:FindFirstChild("Humanoid").SeatPart then
	local s = player.Character.Humanoid.SeatPart
	if s:IsA("VehicleSeat") then
		seat = s
	end
end

-- Controles
UIS.InputBegan:Connect(function(input, gp)
	if gp then return end
	if input.KeyCode == Enum.KeyCode.W then isAccel = true end
	if input.KeyCode == Enum.KeyCode.S then isBraking = true end
end)

UIS.InputEnded:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.W then isAccel = false end
	if input.KeyCode == Enum.KeyCode.S then isBraking = false end
end)

-- Loop de controle
RunService.RenderStepped:Connect(function()
	if not seat then return end

	local vel3d = seat.AssemblyLinearVelocity
	local flatVel = Vector3.new(vel3d.X, 0, vel3d.Z)
	local speed = flatVel.Magnitude

	if isBraking then
		assist.Parent = nil
		limiter.Parent = nil

		if speed > 1 then
			if not brake.Parent then brake.Parent = seat end
			brake.Force = -flatVel.Unit * BRAKE_FORCE
		else
			brake.Parent = nil
		end
		return
	else
		brake.Parent = nil
	end

	if isAccel then
		if speed < MAX_SPEED then
			if not assist.Parent then assist.Parent = seat end
			local dir = Vector3.new(seat.CFrame.LookVector.X, 0, seat.CFrame.LookVector.Z).Unit
			assist.Force = dir * ASSIST_FORCE
		else
			assist.Parent = nil
		end

		if speed > MAX_SPEED then
			if not limiter.Parent then limiter.Parent = seat end
			limiter.Velocity = flatVel.Unit * MAX_SPEED
		else
			limiter.Parent = nil
		end
	else
		assist.Parent = nil
		limiter.Parent = nil
	end
end)
